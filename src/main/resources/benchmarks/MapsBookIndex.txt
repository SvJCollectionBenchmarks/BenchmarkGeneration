<@java@>
#{groups.$group.init.$language.$profile.content # K = Long ## V = String #};
for (int i = 0; i < ${benchmarks.$benchmark.variables.unprofiled.addBatch}; i++) {
    Long key = (long)(Math.sqrt(i) * Math.sin(i) * 10000);
    #{groups.$group.operations.put.$profile.content # key = key ## value = String.format("Book %d", i) #};
}
for (long i = 0; i < ${benchmarks.$benchmark.variables.unprofiled.lookupBatch}; i++) {
    bh.consume(i);
    if (i % 100 == 0) bh.consume(${groups.$group.operations.keys.$profile.content});
    if (i % 2 == 0) bh.consume(#{groups.$group.operations.get.$profile.content # key = i #});
    else bh.consume(#{groups.$group.operations.get.$profile.content # key = -i #});
}
<@java@>
<@scala@>
#{groups.$group.init.$language.$profile.content # K = Long ## V = String #};
for (i <- 0 until ${benchmarks.$benchmark.variables.unprofiled.addBatch}) {
    val key = (Math.sqrt(i) * Math.sin(i) * 10000).longValue()
    #{groups.$group.operations.put.$profile.content # key = key ## value = String.format("Book %d", i) #}
}
for ( i <- 0 until ${benchmarks.$benchmark.variables.unprofiled.lookupBatch}) {
    bh.consume(i);
    if (i % 100 == 0) bh.consume(${groups.$group.operations.keys.$profile.content})
    if (i % 2 == 0) bh.consume(#{groups.$group.operations.get.$profile.content # key = i #})
    else bh.consume(#{groups.$group.operations.get.$profile.content # key = -i #})
}
<@scala@>