{
	"generated": {
		"JHashMap": "java",
		"JLinkedMap": "java",
		"SHashMap": "scala",
		"SLinkedMap": "scala"
	},
	"imports": {
		"java": [
			"import java.util.*;",
			"import scala.collection.mutable.*;"
		],
		"scala": [
			"import java.util",
			"import scala.collection.mutable"
		]
	},
	"init": {
		"java": {
			"JHashMap": {
				"args": [],
				"content": "java.util.HashMap<$K, $V> collection = new java.util.HashMap<>()"
			},
			"JLinkedMap": {
				"args": [],
				"content": "java.util.LinkedHashMap<$K, $V> collection = new java.util.LinkedHashMap<>()"
			},
			"SHashMap": {
				"args": [],
				"content": "scala.collection.mutable.HashMap<$K, $V> collection = new scala.collection.mutable.HashMap<>()"
			},
			"SLinkedMap": {
				"args": [],
				"content": "scala.collection.mutable.LinkedHashMap<$K, $V> collection = new scala.collection.mutable.LinkedHashMap<>()"
			}
		},
		"scala": {
			"JHashMap": {
				"args": [],
				"content": "var collection = new util.HashMap[$K, $V]()"
			},
			"JLinkedMap": {
				"args": [],
				"content": "var collection = new util.LinkedHashMap[$K, $V]()"
			},
			"SHashMap": {
				"args": [],
				"content": "var collection = mutable.HashMap[$K, $V]()"
			},
			"SLinkedMap": {
				"args": [],
				"content": "var collection = mutable.LinkedHashMap[$K, $V]()"
			}
		}
	},
	"operations": {
		"size": {
			"java": {
				"args": [],
				"content": "collection.size()"
			},
			"scala": {
				"args": [],
				"content": "collection.size()"
			}
		},
		"get": {
			"java": {
				"args": [ { "name": "key", "type": "$K" } ],
				"content": "collection.get($key)"
			},
			"scala": {
				"args": [ { "name": "key", "type": "$K" } ],
				"content": "collection.apply($key)"
			}
		},
		"put": {
			"java": {
				"args": [ 
					{ "name": "key", "type": "$K" },
					{ "name": "value", "type": "$V" }
				],
				"content": "collection.put($key, $value)"
			},
			"scala": {
				"args": [ 
					{ "name": "key", "type": "$K" },
					{ "name": "value", "type": "$V" }
				],
				"content": "collection.update($key, $value)"
			}
		},
		"containsKey": {
			"java": {
				"args": [ { "name": "key", "type": "$K" } ],
				"content": "collection.containsKey($key)"
			},
			"scala": {
				"args": [ { "name": "key", "type": "$K" } ],
				"content": "collection.contains($key)"
			}
		},
		"remove": {
			"java": {
				"args": [ { "name": "key", "type": "$K" } ],
				"content": "collection.remove($key)"
			},
			"scala": {
				"args": [ { "name": "key", "type": "$K" } ],
				"content": "collection.remove($key)"
			}
		},
		"replace": {
			"java": {
				"args": [ 
					{ "name": "key", "type": "$K" },
					{ "name": "value", "type": "$V" }
				],
				"content": "collection.replace($key, $value)"
			},
			"scala": {
				"args": [ 
					{ "name": "key", "type": "$K" },
					{ "name": "value", "type": "$V" }
				],
				"content": "collection.update($key, $value)"
			}
		},
		"keys": {
			"java": {
				"args": [],
				"content": "collection.keySet()"
			},
			"scala": {
				"args": [],
				"content": "collection.keySet()"
			}
		},
		"values": {
			"java": {
				"args": [],
				"content": "collection.values()"
			},
			"scala": {
				"args": [],
				"content": "collection.values()"
			}
		}
	},
	"variables": {
		"java": {
			"K": ["Integer", "String", "Double", "Float", "Boolean", "Long"],
			"V": ["Integer", "String", "Double", "Float", "Boolean", "Long"]
		},
		"scala": {
			"K": ["Int", "String", "Double", "Float", "Boolean", "Long"],
			"V": ["Int", "String", "Double", "Float", "Boolean", "Long"]
		}
	}
}